{"/home/travis/build/npmtest/node-npmtest-react-parallax/test.js":"/* istanbul instrument in package npmtest_react_parallax */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-parallax/lib.npmtest_react_parallax.js":"/* istanbul instrument in package npmtest_react_parallax */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_react_parallax = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_react_parallax = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-react-parallax/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-react-parallax && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_react_parallax */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_react_parallax\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_react_parallax.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_react_parallax.rollup.js'] =\n            local.assetsDict['/assets.npmtest_react_parallax.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_react_parallax.__dirname + '/lib.npmtest_react_parallax.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-parallax/node_modules/react-parallax/dist/index.js":"!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"react\"),require(\"react-dom\")):\"function\"==typeof define&&define.amd?define([\"react\",\"react-dom\"],t):\"object\"==typeof exports?exports[\"react-parallax\"]=t(require(\"react\"),require(\"react-dom\")):e[\"react-parallax\"]=t(e.React,e.ReactDOM)}(this,function(e,t){return function(e){function t(i){if(n[i])return n[i].exports;var r=n[i]={exports:{},id:i,loaded:!1};return e[i].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var n={};return t.m=e,t.c=n,t.p=\"\",t(0)}([function(e,t,n){\"use strict\";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,\"__esModule\",{value:!0}),t.Background=t.Parallax=void 0;var r=n(4),o=i(r),s=n(3),a=i(s);t.Parallax=o.default,t.Background=a.default},function(t,n){t.exports=e},function(e,t){\"use strict\";function n(e,t){if(!t)return!1;var n=e.getBoundingClientRect().top,i=e.getBoundingClientRect().bottom;return n<=0&&i>=0||n>=0&&i<=window.innerHeight||n<=window.innerHeight&&i>=window.innerHeight}function i(e){if(!e)return 0;var t=window,n=document,i=n.documentElement,r=n.getElementsByTagName(\"body\")[0];return t.innerHeight||i.clientHeight||r.clientHeight}function r(e,t){return e?t?t.clientHeight:i(e):0}function o(){return!(\"undefined\"==typeof window||!window.document||!window.document.createElement)}function s(e,t,n){if(!t)return 0;var i=e,o=(e.getBoundingClientRect().height,Math.round(i.getBoundingClientRect().top)),s=r(t);return o=o>s?s:o,a(0,s,o)}function a(e,t,n){var i=t-e,r=n-e;return r/i}function l(e,t,n,i){if(i)switch(t.property){case\"blur\":e.style.filter=\"blur(\"+n+(t.unit||\"px\")+\")\"}}Object.defineProperty(t,\"__esModule\",{value:!0}),t.isScrolledIntoView=n,t.getWindowHeight=i,t.getNodeHeight=r,t.canUseDOM=o,t.getRelativePosition=s,t.getPercentage=a,t.setStyleProp=l},function(e,t,n){\"use strict\";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function o(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}function s(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,\"__esModule\",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),l=n(1),u=i(l),p=function(e){function t(){return r(this,t),o(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return s(t,e),a(t,[{key:\"isParallaxBackground\",value:function(){return!0}},{key:\"render\",value:function(){return u.default.createElement(\"div\",{className:\"react-parallax-background \"+this.props.className},this.props.children)}}]),t}(u.default.Component);p.propTypes={children:u.default.PropTypes.node,className:u.default.PropTypes.string},p.defaultProps={className:\"\"},t.default=p},function(e,t,n){\"use strict\";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function o(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}function s(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,\"__esModule\",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),l=n(1),u=i(l),p=n(5),c=i(p),h=n(2),d=function(e){function t(e){r(this,t);var n=o(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={childStyle:{position:\"relative\"}},n.canUseDOM=(0,h.canUseDOM)(),n.ReactDOM=c.default.findDOMNode?c.default:u.default,n.node=null,n.content=null,n.splitChildren=n.getSplitChildren(e),n.parent=e.parent,n.parentHeight=(0,h.getNodeHeight)(n.canUseDOM,n.parent),n.timestamp=Date.now(),n.dynamicBlur=!(!e.blur||void 0===e.blur.min||void 0===e.blur.max),n.autobind(),n}return s(t,e),a(t,[{key:\"componentDidMount\",value:function(){var e=this;if(this.parent=this.props.parent||document,this.addListeners(this.props),this.node=this.ReactDOM.findDOMNode(this),this.img=this.refs.bgImage?this.ReactDOM.findDOMNode(this.refs.bgImage):null,this.props.bgImage){var t=new Image;t.onload=t.onerror=function(t){e.updatePosition()},t.src=this.props.bgImage}else this.updatePosition();this.setParallaxStyle(),this.setInitialBackgroundStyles(this.img),this.setInitialBackgroundStyles(this.bg)}},{key:\"componentWillReceiveProps\",value:function(e){this.splitChildren=this.getSplitChildren(e),e.parent&&this.parent!==e.parent&&(this.parent=e.parent,this.removeListeners(),this.addListeners()),this.parentHeight=(0,h.getNodeHeight)(this.canUseDOM,this.parent)}},{key:\"componentWillUnmount\",value:function(){this.removeListeners(this.parent)}},{key:\"autobind\",value:function(){this.onScroll=this.onScroll.bind(this),this.onWindowResize=this.onWindowResize.bind(this),this.updatePosition=this.updatePosition.bind(this),this.onWindowLoad=this.onWindowLoad.bind(this)}},{key:\"addListeners\",value:function(){this.canUseDOM&&this.parent&&(this.parent.addEventListener(\"scroll\",this.onScroll,!1),window.addEventListener(\"resize\",this.onWindowResize,!1),window.addEventListener(\"load\",this.onWindowLoad,!1))}},{key:\"removeListeners\",value:function(){this.canUseDOM&&this.parent&&(this.parent.removeEventListener(\"scroll\",this.onScroll,!1),window.removeEventListener(\"resize\",this.onWindowResize,!1),window.removeEventListener(\"load\",this.onWindowLoad,!1))}},{key:\"render\",value:function(){var e=this;return u.default.createElement(\"div\",{className:\"react-parallax \"+this.props.className},this.props.bgImage?u.default.createElement(\"img\",{className:this.props.bgClassName,src:this.props.bgImage,ref:\"bgImage\",alt:\"\"}):null,this.splitChildren.bgChildren.length>0?u.default.createElement(\"div\",{className:\"react-parallax-background-children\",ref:function(t){return e.bgMounted(t)}},this.splitChildren.bgChildren):null,u.default.createElement(\"div\",{className:\"react-parallax-content\",style:this.state.childStyle,ref:\"content\"},this.splitChildren.children))}},{key:\"bgMounted\",value:function(e){this.bg=this.ReactDOM.findDOMNode(e)}},{key:\"onScroll\",value:function(e){if(this.canUseDOM){var t=Date.now();t-this.timestamp>=10&&(window.requestAnimationFrame(this.updatePosition),this.timestamp=t)}}},{key:\"onWindowLoad\",value:function(){this.updatePosition()}},{key:\"getSplitChildren\",value:function(e){var t=[],n=u.default.Children.toArray(e.children);return n.forEach(function(e,i){e.type&&e.type.prototype&&e.type.prototype.isParallaxBackground&&(t=t.concat(n.splice(i,1)))}),{bgChildren:t,children:n}}},{key:\"updatePosition\",value:function(){var e=!1;this.content=this.ReactDOM.findDOMNode(this.refs.content),this.contentHeight=this.content.getBoundingClientRect().height,this.contentWidth=this.node.getBoundingClientRect().width,this.img&&this.img.naturalWidth/this.img.naturalHeight<this.contentWidth/this.getImageHeight()&&(e=!0);var t=(0,h.getRelativePosition)(this.node,this.canUseDOM,this.parent);this.img&&this.setImagePosition(t,e),this.bg&&this.splitChildren.bgChildren.length>0&&this.setBackgroundPosition(t)}},{key:\"getImageHeight\",value:function(){var e=this.props.strength<0;return Math.floor(this.contentHeight+(e?2.5:1)*Math.abs(this.props.strength))}},{key:\"setImagePosition\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=this.props.bgHeight||(t?\"auto\":this.getImageHeight()+\"px\"),i=this.props.bgWidth||(t?this.contentWidth+\"px\":\"auto\");if(this.img.style.height=n,this.img.style.width=i,this.props.disabled!==!0){var r=this.props.strength<0,o=(r?this.props.strength:0)-this.props.strength*e;if(this.img.style.WebkitTransform=\"translate3d(-50%, \"+o+\"px, 0)\",this.img.style.transform=\"translate3d(-50%, \"+o+\"px, 0)\",this.props.blur){var s=this.dynamicBlur?this.props.blur.min+(1-e)*this.props.blur.max:this.props.blur;this.setBlur(this.img,s)}}}},{key:\"setBlur\",value:function(e,t){e.style.WebkitFilter=\"blur(\"+t+\"px)\",e.style.filter=\"blur(\"+t+\"px)\"}},{key:\"setBackgroundPosition\",value:function(e){if(this.props.disabled!==!0){var t=this.props.strength<0,n=(t?this.props.strength:0)-this.props.strength*e;this.bg.style.WebkitTransform=\"translate3d(-50%, \"+n+\"px, 0)\",this.bg.style.transform=\"translate3d(-50%, \"+n+\"px, 0)\"}}},{key:\"setInitialBackgroundStyles\",value:function(e){var t=this;e&&(e.style.position=\"absolute\",e.style.left=\"50%\",e.style.WebkitTransform=\"translate3d(-50%, 0, 0)\",e.style.transform=\"translate3d(-50%, 0, 0)\",e.style.WebkitTransformStyle=\"preserve-3d\",e.style.WebkitBackfaceVisibility=\"hidden\",e.style.MozBackfaceVisibility=\"hidden\",e.style.MsBackfaceVisibility=\"hidden\",this.props.bgStyle&&Object.keys(this.props.bgStyle).forEach(function(n){e.style[n]=t.props.bgStyle[n]}))}},{key:\"onWindowResize\",value:function(){this.parentHeight=(0,h.getNodeHeight)(this.canUseDOM,this.parent),this.updatePosition()}},{key:\"setParallaxStyle\",value:function(){this.node&&(this.node.style.position=\"relative\",this.node.style.overflow=\"hidden\")}},{key:\"log\",value:function(){if(this.props.log){var e;(e=console).log.apply(e,arguments)}}}]),t}(u.default.Component);d.propTypes={bgImage:u.default.PropTypes.string,bgStyle:u.default.PropTypes.object,bgWidth:u.default.PropTypes.string,bgHeight:u.default.PropTypes.string,strength:u.default.PropTypes.number,blur:u.default.PropTypes.oneOfType([u.default.PropTypes.number,u.default.PropTypes.object]),className:u.default.PropTypes.string,bgClassName:u.default.PropTypes.string,parent:u.default.PropTypes.any},d.defaultProps={strength:100,log:!1,disabled:!1,className:\"\",bgClassName:\"react-parallax-bgimage\"},t.default=d},function(e,n){e.exports=t}])});","/home/travis/build/npmtest/node-npmtest-react-parallax/node_modules/react-parallax/karma.conf.js":"// Karma configuration\n// Generated on Thu Nov 06 2014 14:10:34 GMT+0100 (Mitteleuropäische Zeit)\n\nmodule.exports = function(config) {\n    config.set({\n\n        // base path that will be used to resolve all patterns (eg. files, exclude)\n        basePath: '',\n\n        // How long does Karma wait for a browser to reconnect (in ms).\n        browserDisconnectTimeout: 31000,\n\n\t\t// How long will Karma wait for a message from a browser before disconnecting from it (in ms).\n\t\tbrowserNoActivityTimeout: 31000,\n\n        // frameworks to use\n        // available frameworks: https://npmjs.org/browse/keyword/karma-adapter\n        frameworks: ['jasmine'],\n\n\n        // list of files / patterns to load in the browser\n        files: [\n            'node_modules/es5-shim/es5-shim.js',\n            'node_modules/es5-shim/es5-sham.js',\n            'test/test.built.js'\n        ],\n\n\n        // list of files to exclude\n\t\texclude: [],\n\n\n        // preprocess matching files before serving them to the browser\n        // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor\n\t\tpreprocessors: {},\n\n\n        // test results reporter to use\n        // possible values: 'dots', 'progress'\n        // available reporters: https://npmjs.org/browse/keyword/karma-reporter\n        reporters: ['progress'],\n\n\n        // web server port\n        port: 9876,\n\n\n        // enable / disable colors in the output (reporters and logs)\n        colors: true,\n\n\n        // level of logging\n        // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG\n        logLevel: config.LOG_INFO,\n\n\n        // enable / disable watching file and executing tests whenever any file changes\n        autoWatch: true,\n\n\n        // start these browsers\n        // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher\n\t\tbrowsers: ['Chrome_unsecure'],\n\n\n        // Continuous Integration mode\n        // if true, Karma captures browsers, runs the tests and exits\n        singleRun: true,\n\n\n        // Customized launcher\n        customLaunchers: {\n            Chrome_unsecure: {\n                base: 'Chrome',\n\t\t\t\tflags: ['--disable-web-security']\n\t\t\t}\n\t\t}\n\n    }); //config.set\n}; // module.exports","/home/travis/build/npmtest/node-npmtest-react-parallax/node_modules/react-parallax/webpack.config.dev.js":"var merge = require('webpack-merge');\nvar path = require('path');\nvar webpack = require('webpack');\n\nvar common = require('./webpack.config.js');\n\nvar ROOT_PATH = path.resolve(__dirname);\n\nmodule.exports = merge(common, {\n\tdevtool: 'eval',\n\tdevServer: {\n\t\thost: '0.0.0.0',\n\t\tcolors: true,\n\t\thistoryApiFallback: true,\n\t\thot: true,\n\t\tinline: true,\n\t\tprogress: true,\n\t\tcontentBase: 'www'\n\t},\n\tplugins: [\n\t\tnew webpack.HotModuleReplacementPlugin(),\n\t\tnew webpack.DefinePlugin({\n\t\t\t'process.env': {\n\t\t\t\t'NODE_ENV': JSON.stringify('development')\n\t\t\t}\n\t\t})\n\t]\n});","/home/travis/build/npmtest/node-npmtest-react-parallax/node_modules/react-parallax/webpack.config.js":"var path = require('path');\nvar webpack = require('webpack');\nvar ExtractTextPlugin = require('extract-text-webpack-plugin');\nvar HtmlWebpackPlugin = require('html-webpack-plugin');\n\nvar ROOT_PATH = path.resolve(__dirname);\nvar nodeModulesDir = path.join(ROOT_PATH, 'node_modules');\n\n//Common configuration settings\nmodule.exports = {\n\teslint: {\n\t\tconfigFile: '.eslintrc'\n\t},\n\tentry: './src/index.jsx',\n\tresolve: {\n\t\textensions: ['', '.js', '.jsx'],\n\t\tmodulesDirectories: ['node_modules']\n\t},\n\toutput: {\n\t\tpath: path.resolve(ROOT_PATH, 'www'),\n\t\tfilename: 'bundle.js'\n\t},\n\tmodule: {\n\t\tpreLoaders: [{\n\t\t\ttest: /\\.js$/,\n\t\t\tloader: 'eslint-loader',\n\t\t\texclued: /node_modules/\n\t\t}],\n\t\tloaders: [{\n\t\t\ttest: /\\.(js|jsx)$/,\n\t\t\tloader: 'babel-loader',\n\t\t\tinclude: path.resolve(ROOT_PATH, 'src')\n\t\t}, {\n\t\t\ttest: /\\.json/,\n\t\t\tloader: 'json-loader'\n\t\t}, {\n\t\t\ttest: /\\.png$/,\n\t\t\tloaders: ['url-loader?limit=100000&mimetype=image/png'],\n\t\t\texclude: /node_modules/\n\t\t}, {\n\t\t\ttest: /\\.scss$/,\n\t\t\tloaders: ['style', 'css', 'sass']\n\t\t}, {\n\t\t\ttest: /\\.svg(\\?v=\\d+\\.\\d+\\.\\d+)?$/,\n\t\t\tloader: 'url?limit=100000&mimetype=image/svg+xml'\n\t\t}, {\n\t\t\ttest: /\\.(jpe|jpg|gif|woff|woff2|eot|ttf)(\\?.*$|$)/,\n\t\t\tloader: 'file'\n\t\t}]\n\t},\n\tplugins: [\n\t\tnew HtmlWebpackPlugin({\n\t\t\ttemplate: './index.html',\n\t\t\tinject: 'body'\n\t\t})\n\t]\n};","/home/travis/build/npmtest/node-npmtest-react-parallax/node_modules/react-parallax/src/util/Util.js":"\nexport function isScrolledIntoView(element, canUseDOM) {\n\tif (!canUseDOM) {\n\t\treturn false;\n\t}\n\tlet elementTop = element.getBoundingClientRect().top,\n\t\telementBottom = element.getBoundingClientRect().bottom;\n\treturn elementTop <= 0 && elementBottom >= 0 ||\n\t\t\telementTop >= 0 && elementBottom <= window.innerHeight ||\n\t\t\telementTop <= window.innerHeight && elementBottom >= window.innerHeight;\n}\n\nexport function getWindowHeight(canUseDOM) {\n\tif (!canUseDOM) {\n\t\treturn 0;\n\t}\n\n\tlet w = window,\n\t\td = document,\n\t\te = d.documentElement,\n\t\tg = d.getElementsByTagName('body')[0];\n\n\treturn w.innerHeight || e.clientHeight || g.clientHeight;\n}\n\nexport function getNodeHeight(canUseDOM, parent) {\n\tif (!canUseDOM) {\n\t\treturn 0;\n\t}\n\n\tif (!parent) {\n\t\treturn getWindowHeight(canUseDOM);\n\t}\n\n\treturn parent.clientHeight;\n}\n\nexport function canUseDOM() {\n\treturn !!((typeof window !== 'undefined' && window.document && window.document.createElement));\n}\n\nexport function getRelativePosition(node, canUseDOM, parent) {\n\tif (!canUseDOM) {\n\t\treturn 0;\n\t}\n\tlet element = node;\n\tlet height = node.getBoundingClientRect().height;\n    let y = Math.round(element.getBoundingClientRect().top);\n    const parentHeight = getNodeHeight(canUseDOM);\n    y = y > parentHeight ? parentHeight : y;\n\n    return getPercentage(0, parentHeight, y);\n\n}\n\nexport function getPercentage(startpos, endpos, currentpos) {\n     let distance = endpos - startpos;\n     let displacement = currentpos - startpos;\n     return displacement / distance;\n}\n\nexport function setStyleProp(node, style, value, canUseDOM) {\n\tif (!canUseDOM) {\n\t\treturn;\n\t}\n\n\tswitch(style.property) {\n\t\tcase 'blur':\n\t\t\tnode.style.filter = 'blur(' + value + (style.unit || 'px') + ')';\n\t}\n}\n"}